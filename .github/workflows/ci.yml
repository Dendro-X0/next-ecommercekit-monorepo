name: CI

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Lint · Typecheck · Build (web)
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: "1"
      BETTER_AUTH_SECRET: ci-only-dummy-secret
      WEB_ORIGIN: http://localhost:3000
      DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://user:pass@127.0.0.1:5432/db' }}
      APP_URL: ${{ secrets.APP_URL || 'http://localhost:3000' }}
      NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies (workspace root)
        run: pnpm -w install --frozen-lockfile

      # Safety: ensure package-level node_modules links exist for web
      # Some runners mis-detect workspace links during turbo steps.
      - name: Install dependencies (web)
        run: pnpm -w --filter web... install --frozen-lockfile

      - name: CI defaults (env)
        run: |
          : "${DATABASE_URL:=postgresql://user:pass@127.0.0.1:5432/db}"
          : "${APP_URL:=http://localhost:3000}"
          : "${NEXT_PUBLIC_APP_URL:=http://localhost:3000}"
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV
          echo "APP_URL=$APP_URL" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL" >> $GITHUB_ENV
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          APP_URL: ${{ secrets.APP_URL }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}

      - name: Lint (web)
        working-directory: apps/web
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint
        continue-on-error: true

      - name: A11y Lint (web)
        run: pnpm -w --filter web... run lint:a11y
        continue-on-error: true

      - name: Typecheck (web)
        run: pnpm -w turbo run typecheck --filter=web...

      - name: Build upstream emails (ensure subpath export types)
        run: pnpm -w turbo run build --filter=@repo/emails...

      - name: Build web app
        run: pnpm -w turbo run build --filter=web...
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ env.DATABASE_URL }}
          APP_URL: ${{ env.APP_URL }}
          NEXT_PUBLIC_APP_URL: ${{ env.NEXT_PUBLIC_APP_URL }}